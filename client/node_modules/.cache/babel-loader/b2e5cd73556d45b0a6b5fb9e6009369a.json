{"ast":null,"code":"import { takeEvery, call, put, take } from \"redux-saga/effects\";\nimport { actions } from \"./actions\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction* getPosts(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const response = yield call(async () => {\n      return await axios.post(\"http://localhost:3009/api/v1/post/getPosts\", {\n        email,\n        password\n      }).then(res => {\n        return res;\n      });\n    });\n    yield put(actions.loginSuccess(response));\n    payload.onLoginSuccess();\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    console.log(error);\n    yield put(actions.loginFailed(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message));\n  }\n}\n\nexport function* postSaga() {\n  yield takeEvery(actions.getPosts, getPosts);\n}","map":{"version":3,"names":["takeEvery","call","put","take","actions","axios","useNavigate","Cookies","getPosts","payload","email","password","response","post","then","res","loginSuccess","onLoginSuccess","error","console","log","loginFailed","data","message","postSaga"],"sources":["/Users/tarak/Documents/projects/Social-Media-Frontend/src/store/post/saga.js"],"sourcesContent":["import { takeEvery, call, put, take } from \"redux-saga/effects\";\nimport { actions } from \"./actions\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction* getPosts({ payload }) {\n    try {\n      const {email,password} = payload\n      const response = yield call(async () => {\n        return await axios\n          .post(\"http://localhost:3009/api/v1/post/getPosts\",{email,password})\n          .then((res) => {\n            return res;\n          });\n      });\n      yield put(actions.loginSuccess(response));\n      payload.onLoginSuccess()\n    } catch (error) {\n      console.log(error)\n      yield put(actions.loginFailed(error?.response?.data?.message));\n    }\n}\n\n\nexport function* postSaga() {\n    yield takeEvery(actions.getPosts, getPosts);\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,UAAUC,QAAV,OAAgC;EAAA,IAAb;IAAEC;EAAF,CAAa;;EAC5B,IAAI;IACF,MAAM;MAACC,KAAD;MAAOC;IAAP,IAAmBF,OAAzB;IACA,MAAMG,QAAQ,GAAG,MAAMX,IAAI,CAAC,YAAY;MACtC,OAAO,MAAMI,KAAK,CACfQ,IADU,CACL,4CADK,EACwC;QAACH,KAAD;QAAOC;MAAP,CADxC,EAEVG,IAFU,CAEJC,GAAD,IAAS;QACb,OAAOA,GAAP;MACD,CAJU,CAAb;IAKD,CAN0B,CAA3B;IAOA,MAAMb,GAAG,CAACE,OAAO,CAACY,YAAR,CAAqBJ,QAArB,CAAD,CAAT;IACAH,OAAO,CAACQ,cAAR;EACD,CAXD,CAWE,OAAOC,KAAP,EAAc;IAAA;;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMhB,GAAG,CAACE,OAAO,CAACiB,WAAR,CAAoBH,KAApB,aAAoBA,KAApB,0CAAoBA,KAAK,CAAEN,QAA3B,4EAAoB,gBAAiBU,IAArC,yDAAoB,qBAAuBC,OAA3C,CAAD,CAAT;EACD;AACJ;;AAGD,OAAO,UAAUC,QAAV,GAAqB;EACxB,MAAMxB,SAAS,CAACI,OAAO,CAACI,QAAT,EAAmBA,QAAnB,CAAf;AACH"},"metadata":{},"sourceType":"module"}