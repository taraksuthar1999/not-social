{"ast":null,"code":"\"use strict\";\n\nvar A = Object.create;\nvar e = Object.defineProperty;\nvar D = Object.getOwnPropertyDescriptor;\nvar g = Object.getOwnPropertyNames;\nvar h = Object.getPrototypeOf,\n    j = Object.prototype.hasOwnProperty;\n\nvar k = (r, t) => {\n  for (var i in t) e(r, i, {\n    get: t[i],\n    enumerable: !0\n  });\n},\n    s = (r, t, i, f) => {\n  if (t && typeof t == \"object\" || typeof t == \"function\") for (let m of g(t)) !j.call(r, m) && m !== i && e(r, m, {\n    get: () => t[m],\n    enumerable: !(f = D(t, m)) || f.enumerable\n  });\n  return r;\n};\n\nvar o = (r, t, i) => (i = r != null ? A(h(r)) : {}, s(t || !r || !r.__esModule ? e(i, \"default\", {\n  value: r,\n  enumerable: !0\n}) : i, r)),\n    q = r => s(e({}, \"__esModule\", {\n  value: !0\n}), r);\n\nvar z = {};\nk(z, {\n  default: () => w\n});\nmodule.exports = q(z);\n\nvar p = o(require(\"./building_number\")),\n    d = o(require(\"./city\")),\n    n = o(require(\"./city_prefix\")),\n    a = o(require(\"./city_suffix\")),\n    u = o(require(\"./default_country\")),\n    _ = o(require(\"./postcode\")),\n    c = o(require(\"./state\")),\n    y = o(require(\"./state_abbr\")),\n    b = o(require(\"./street\")),\n    x = o(require(\"./street_address\")),\n    l = o(require(\"./street_suffix\"));\n\nconst v = {\n  building_number: p.default,\n  city: d.default,\n  city_prefix: n.default,\n  city_suffix: a.default,\n  default_country: u.default,\n  postcode: _.default,\n  state: c.default,\n  state_abbr: y.default,\n  street: b.default,\n  street_address: x.default,\n  street_suffix: l.default\n};\nvar w = v;\n0 && (module.exports = {});","map":{"version":3,"names":["A","Object","create","e","defineProperty","D","getOwnPropertyDescriptor","g","getOwnPropertyNames","h","getPrototypeOf","j","prototype","hasOwnProperty","k","r","t","i","get","enumerable","s","f","m","call","o","__esModule","value","q","z","default","w","module","exports","p","require","d","n","a","u","_","c","y","b","x","l","v","building_number","city","city_prefix","city_suffix","default_country","postcode","state","state_abbr","street","street_address","street_suffix"],"sources":["/Users/tarak/Documents/projects/Social-Media-Frontend/node_modules/@faker-js/faker/dist/cjs/locales/zh_CN/address/index.js"],"sourcesContent":["\"use strict\";var A=Object.create;var e=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var k=(r,t)=>{for(var i in t)e(r,i,{get:t[i],enumerable:!0})},s=(r,t,i,f)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let m of g(t))!j.call(r,m)&&m!==i&&e(r,m,{get:()=>t[m],enumerable:!(f=D(t,m))||f.enumerable});return r};var o=(r,t,i)=>(i=r!=null?A(h(r)):{},s(t||!r||!r.__esModule?e(i,\"default\",{value:r,enumerable:!0}):i,r)),q=r=>s(e({},\"__esModule\",{value:!0}),r);var z={};k(z,{default:()=>w});module.exports=q(z);var p=o(require(\"./building_number\")),d=o(require(\"./city\")),n=o(require(\"./city_prefix\")),a=o(require(\"./city_suffix\")),u=o(require(\"./default_country\")),_=o(require(\"./postcode\")),c=o(require(\"./state\")),y=o(require(\"./state_abbr\")),b=o(require(\"./street\")),x=o(require(\"./street_address\")),l=o(require(\"./street_suffix\"));const v={building_number:p.default,city:d.default,city_prefix:n.default,city_suffix:a.default,default_country:u.default,postcode:_.default,state:c.default,state_abbr:y.default,street:b.default,street_address:x.default,street_suffix:l.default};var w=v;0&&(module.exports={});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}