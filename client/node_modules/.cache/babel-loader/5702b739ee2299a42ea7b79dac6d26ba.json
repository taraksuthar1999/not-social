{"ast":null,"code":"var _jsxFileName = \"/Users/tarak/Documents/projects/Social-Media-Frontend/src/components/Post/ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport { usePost } from \"../../contexts/PostProvider\";\nimport { Box } from \"@mui/system\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from '@mui/joy/Link';\nimport { Button, Divider, Grid, TextField } from \"@mui/material\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport CommentList from \"../Comment/CommentList\";\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useFormik, FormikProvider, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { actions } from \"../../store/post/actions\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  parentId: Yup.string().required(\"parenId is required\").label(\"parentId\"),\n  message: Yup.string().required(\"Message is required\").min(5, \"Too short\").label(\"message\")\n});\n\nfunction ViewPost(props) {\n  _s();\n\n  const initialState = {\n    message: \"\"\n  };\n  const {\n    id\n  } = useParams();\n  const [initFormData] = useState(initialState);\n\n  const onSubmit = async formData => {\n    console.log(formData); // props.login({...formData,onLoginSuccess});\n  };\n\n  const formik = useFormik({\n    initialValues: initFormData,\n    validationSchema: validationSchema,\n    enableReinitialize: true,\n    onSubmit: values => onSubmit(values)\n  });\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    touched,\n    handleBlur\n  } = formik;\n  useEffect(() => {\n    props.getPost({\n      id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxWidth: 'sm',\n          margin: '25px auto',\n          border: \"1px solid rgba(0, 0, 0, 0.12)\",\n          padding: \"15px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n            value: formik,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                name: \"message\",\n                placeholder: \"Comment\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.message,\n                error: errors.message && touched.message,\n                helperText: errors.message && touched.message ? errors.email : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxWidth: 'sm',\n          margin: '25px auto',\n          border: \"1px solid rgba(0, 0, 0, 0.12)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: \"15px\",\n            fontSize: \"0.5em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [5, \" Comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ViewPost, \"4aPDRVvuFw5uvbyc+0pZmGWo58k=\", false, function () {\n  return [useParams, useFormik];\n});\n\n_c = ViewPost;\nconst commentAdd = actions.commentAdd;\nconst getPost = actions.getPost;\nconst ConnectedViewPost = connect(state => state.post, {\n  commentAdd,\n  getPost\n})(ViewPost);\nexport default ConnectedViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["usePost","Box","Card","Typography","Link","Button","Divider","Grid","TextField","IconButton","IconButtonProps","ThumbUpOffAltIcon","VisibilityIcon","ChatBubbleOutlineIcon","CommentList","AccessTimeIcon","useEffect","useState","useFormik","FormikProvider","Form","Yup","connect","useDispatch","useSelector","actions","useParams","validationSchema","object","parentId","string","required","label","message","min","ViewPost","props","initialState","id","initFormData","onSubmit","formData","console","log","formik","initialValues","enableReinitialize","values","handleChange","handleSubmit","errors","touched","handleBlur","getPost","maxWidth","margin","border","padding","email","fontSize","commentAdd","ConnectedViewPost","state","post"],"sources":["/Users/tarak/Documents/projects/Social-Media-Frontend/src/components/Post/ViewPost.js"],"sourcesContent":["import { usePost } from \"../../contexts/PostProvider\";\nimport { Box } from \"@mui/system\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from '@mui/joy/Link';\nimport { Button, Divider, Grid, TextField } from \"@mui/material\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport CommentList from \"../Comment/CommentList\";\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useFormik, FormikProvider, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport {actions} from \"../../store/post/actions\";\nimport { useParams } from \"react-router-dom\";\n\nconst validationSchema = Yup.object({\n  parentId: Yup.string().required(\"parenId is required\").label(\"parentId\"),\n  message: Yup.string()\n    .required(\"Message is required\")\n    .min(5, \"Too short\")\n    .label(\"message\"),\n});\n\nfunction ViewPost(props){\n    const initialState = {\n        message: \"\",\n    };\n    const {id} = useParams()\n    const [initFormData] = useState(initialState);\n    const onSubmit = async (formData) => {\n        console.log(formData)\n        // props.login({...formData,onLoginSuccess});\n    };\n    const formik = useFormik({\n        initialValues: initFormData,\n        validationSchema: validationSchema,\n        enableReinitialize: true,\n        onSubmit: (values) => onSubmit(values),\n    });\n    const { handleChange, handleSubmit, values, errors, touched, handleBlur } =\n    formik;\n    useEffect(()=>{\n        props.getPost({id})\n    },[])\n    return (\n            <Grid container>\n                <Grid item md={8}>\n                        {/* <Box sx={{maxWidth:'sm',margin:'25px auto',border:\"1px solid rgba(0, 0, 0, 0.12)\"}}>\n                            <Card sx={{ boxShadow:0,borderRadius:0,padding:'15px'}}>\n                                <Box mb={3}>\n                                <Typography><Link color=\"text.primary\" fontSize={'1.5em'} underline=\"none\">{post.title}</Link></Typography>\n                                </Box>\n                                <Box mb={3}>\n                                    <Box display={'flex'}>\n                                        <Typography><Link color=\"text.primary\" fontSize={'0.8em'} underline=\"none\">{post.company}</Link></Typography>\n                                        <Typography sx={{ '&::before':{ content:'\" | @\"',marginLeft:\"5px\",fontSize:'0.8em'}}}><Link color=\"text.primary\" fontSize=\"0.8em\" underline=\"none\">{post.userName}</Link></Typography>\n                                    </Box>\n                                    <Box display={'flex'}>\n                                        <Typography color='text.secondary'><AccessTimeIcon /></Typography>\n                                        <Typography color='text.secondary'>2h</Typography>\n                                    </Box>\n                                </Box>\n                                <Box mb={3}>\n                                    <Typography justifyContent=\"left\" variant=\"body2\" color=\"text.secondary\">\n                                    <Link color='text.secondary'  underline=\"none\">{post.body}</Link>\n                                    </Typography>\n                                </Box>\n                                <Divider/>\n                                <Box mt={2}>\n                                    <IconButton aria-label=\"like\">\n                                        <ThumbUpOffAltIcon sx={{color:'black'}}/><Typography color='text.primary' sx={{fontSize:\"0.5em\"}}>{post.likes}</Typography>\n                                    </IconButton>\n                                    <IconButton aria-label=\"comment\">\n                                        <ChatBubbleOutlineIcon sx={{color:'black'}}/><Typography color='text.primary' sx={{fontSize:\"0.5em\"}}>{post.commentCount}</Typography>\n                                    </IconButton>\n                                </Box>\n                            </Card>\n                        </Box> */}\n                        <Box sx={{ maxWidth:'sm',margin:'25px auto',border:\"1px solid rgba(0, 0, 0, 0.12)\",padding:\"15px\"}}>\n                           <Box display={\"flex\"}>\n                            <FormikProvider value={formik}>\n                                <Form onSubmit={handleSubmit}>\n                                    <TextField fullWidth \n                                        name=\"message\"\n                                        placeholder=\"Comment\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.message}\n                                        error={errors.message && touched.message}\n                                        helperText={errors.message && touched.message ? errors.email : null}\n                                    />\n                                    <Button type=\"submit\">Post</Button>\n                                </Form>\n                            </FormikProvider>\n                           </Box>\n                        </Box>\n                        <Box sx={{ maxWidth:'sm',margin:'25px auto',border:\"1px solid rgba(0, 0, 0, 0.12)\"}}>\n                            <Box sx={{padding:\"15px\",fontSize:\"0.5em\"}}>\n                                <Typography>{5} Comments</Typography>\n                            </Box>\n                            <Divider/>\n                            <Box>\n                                {/* <CommentList comments={comments}/> */}\n                            </Box>\n                        </Box>\n                </Grid>\n            </Grid>\n    )\n           \n}\n\n\nconst commentAdd = actions.commentAdd\nconst getPost = actions.getPost\nconst ConnectedViewPost = connect((state) => state.post, { commentAdd ,getPost})(ViewPost);\nexport default ConnectedViewPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}