{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar _require = require('focus-trap'),\n    createFocusTrap = _require.createFocusTrap;\n\nvar _require2 = require('tabbable'),\n    isFocusable = _require2.isFocusable;\n\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n\n  var _super = _createSuper(FocusTrap);\n\n  function FocusTrap(props) {\n    var _this;\n\n    _classCallCheck(this, FocusTrap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions; // use internal options first, falling back to original options\n\n\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n\n        optionValue = optionValue.apply(void 0, params);\n      }\n\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n\n      return node;\n    });\n\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n\n        var canReturnFocus = !!( // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && ( // was there an outside click that allowed deactivation?\n        !_this2.outsideClick || // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation && // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n            preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n\n      return null;\n    }\n  }]);\n\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  // DOM element ONLY\n  children: PropTypes.oneOfType([PropTypes.element, // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n\n};\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","React","require","PropTypes","_require","createFocusTrap","_require2","isFocusable","FocusTrap","_React$Component","_super","_this","optionName","_this$internalOptions","optionValue","internalOptions","originalOptions","_len","params","Array","_key","undefined","Error","concat","node","_this$getDocument","getDocument","querySelector","handleDeactivate","handlePostDeactivate","handleClickOutsideDeactivates","returnFocusOnDeactivate","checkCanReturnFocus","onDeactivate","onPostDeactivate","clickOutsideDeactivates","focusTrapOptions","hasOwnProperty","outsideClick","focusTrapElements","containerElements","updatePreviousElement","document","getReturnFocusNode","getNodeForOption","previouslyFocusedElement","currentDocument","activeElement","deactivateTrap","focusTrap","active","deactivate","returnFocus","event","allowDeactivation","_this2","finishDeactivation","returnFocusNode","canReturnFocus","focus","tabbableOptions","_this2$internalOption","preventScroll","then","setupFocusTrap","activate","paused","pause","nodesExist","some","_createFocusTrap","componentDidMount","componentDidUpdate","prevProps","updateContainerElements","hasActivated","hasDeactivated","hasPaused","hasUnpaused","unpause","componentWillUnmount","render","_this3","child","children","Children","only","type","Fragment","callbackRef","element","ref","current","childWithRef","cloneElement","Component","ElementType","Element","Function","propTypes","bool","shape","object","onActivate","func","onPostActivate","checkCanFocusTrap","initialFocus","oneOfType","instanceOf","string","fallbackFocus","escapeDeactivates","setReturnFocus","allowOutsideClick","displayCheck","oneOf","getShadowRoot","arrayOf","defaultProps","module","exports"],"sources":["/Users/tarak/Documents/projects/Social-Media-Frontend/node_modules/focus-trap-react/dist/focus-trap-react.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar _require = require('focus-trap'),\n    createFocusTrap = _require.createFocusTrap;\n\nvar _require2 = require('tabbable'),\n    isFocusable = _require2.isFocusable;\n\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n\n  var _super = _createSuper(FocusTrap);\n\n  function FocusTrap(props) {\n    var _this;\n\n    _classCallCheck(this, FocusTrap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n\n        optionValue = optionValue.apply(void 0, params);\n      }\n\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n\n      return node;\n    });\n\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n\n        var canReturnFocus = !!( // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && ( // was there an outside click that allowed deactivation?\n        !_this2.outsideClick || // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation && // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n            preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n\n      return null;\n    }\n  }]);\n\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  // DOM element ONLY\n  children: PropTypes.oneOfType([PropTypes.element, // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n\n};\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;"],"mappings":"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"},"metadata":{},"sourceType":"script"}