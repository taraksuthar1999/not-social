{"ast":null,"code":"\"use strict\";\n\nvar A = Object.create;\nvar i = Object.defineProperty;\nvar D = Object.getOwnPropertyDescriptor;\nvar g = Object.getOwnPropertyNames;\nvar h = Object.getPrototypeOf,\n    j = Object.prototype.hasOwnProperty;\n\nvar k = (r, o) => {\n  for (var m in o) i(r, m, {\n    get: o[m],\n    enumerable: !0\n  });\n},\n    f = (r, o, m, s) => {\n  if (o && typeof o == \"object\" || typeof o == \"function\") for (let e of g(o)) !j.call(r, e) && e !== m && i(r, e, {\n    get: () => o[e],\n    enumerable: !(s = D(o, e)) || s.enumerable\n  });\n  return r;\n};\n\nvar t = (r, o, m) => (m = r != null ? A(h(r)) : {}, f(o || !r || !r.__esModule ? i(m, \"default\", {\n  value: r,\n  enumerable: !0\n}) : m, r)),\n    q = r => f(i({}, \"__esModule\", {\n  value: !0\n}), r);\n\nvar z = {};\nk(z, {\n  default: () => w\n});\nmodule.exports = q(z);\n\nvar p = t(require(\"./building_number\")),\n    d = t(require(\"./city\")),\n    n = t(require(\"./city_name\")),\n    a = t(require(\"./country\")),\n    c = t(require(\"./default_country\")),\n    u = t(require(\"./postcode\")),\n    y = t(require(\"./secondary_address\")),\n    _ = t(require(\"./state\")),\n    l = t(require(\"./street\")),\n    b = t(require(\"./street_address\")),\n    x = t(require(\"./street_prefix\"));\n\nconst v = {\n  building_number: p.default,\n  city: d.default,\n  city_name: n.default,\n  country: a.default,\n  default_country: c.default,\n  postcode: u.default,\n  secondary_address: y.default,\n  state: _.default,\n  street: l.default,\n  street_address: b.default,\n  street_prefix: x.default\n};\nvar w = v;\n0 && (module.exports = {});","map":{"version":3,"names":["A","Object","create","i","defineProperty","D","getOwnPropertyDescriptor","g","getOwnPropertyNames","h","getPrototypeOf","j","prototype","hasOwnProperty","k","r","o","m","get","enumerable","f","s","e","call","t","__esModule","value","q","z","default","w","module","exports","p","require","d","n","a","c","u","y","_","l","b","x","v","building_number","city","city_name","country","default_country","postcode","secondary_address","state","street","street_address","street_prefix"],"sources":["/Users/tarak/Documents/projects/Social-Media-Frontend/node_modules/@faker-js/faker/dist/cjs/locales/ar/address/index.js"],"sourcesContent":["\"use strict\";var A=Object.create;var i=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var k=(r,o)=>{for(var m in o)i(r,m,{get:o[m],enumerable:!0})},f=(r,o,m,s)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let e of g(o))!j.call(r,e)&&e!==m&&i(r,e,{get:()=>o[e],enumerable:!(s=D(o,e))||s.enumerable});return r};var t=(r,o,m)=>(m=r!=null?A(h(r)):{},f(o||!r||!r.__esModule?i(m,\"default\",{value:r,enumerable:!0}):m,r)),q=r=>f(i({},\"__esModule\",{value:!0}),r);var z={};k(z,{default:()=>w});module.exports=q(z);var p=t(require(\"./building_number\")),d=t(require(\"./city\")),n=t(require(\"./city_name\")),a=t(require(\"./country\")),c=t(require(\"./default_country\")),u=t(require(\"./postcode\")),y=t(require(\"./secondary_address\")),_=t(require(\"./state\")),l=t(require(\"./street\")),b=t(require(\"./street_address\")),x=t(require(\"./street_prefix\"));const v={building_number:p.default,city:d.default,city_name:n.default,country:a.default,default_country:c.default,postcode:u.default,secondary_address:y.default,state:_.default,street:l.default,street_address:b.default,street_prefix:x.default};var w=v;0&&(module.exports={});\n"],"mappings":"AAAA;;AAAa,IAAIA,CAAC,GAACC,MAAM,CAACC,MAAb;AAAoB,IAAIC,CAAC,GAACF,MAAM,CAACG,cAAb;AAA4B,IAAIC,CAAC,GAACJ,MAAM,CAACK,wBAAb;AAAsC,IAAIC,CAAC,GAACN,MAAM,CAACO,mBAAb;AAAiC,IAAIC,CAAC,GAACR,MAAM,CAACS,cAAb;AAAA,IAA4BC,CAAC,GAACV,MAAM,CAACW,SAAP,CAAiBC,cAA/C;;AAA8D,IAAIC,CAAC,GAAC,CAACC,CAAD,EAAGC,CAAH,KAAO;EAAC,KAAI,IAAIC,CAAR,IAAaD,CAAb,EAAeb,CAAC,CAACY,CAAD,EAAGE,CAAH,EAAK;IAACC,GAAG,EAACF,CAAC,CAACC,CAAD,CAAN;IAAUE,UAAU,EAAC,CAAC;EAAtB,CAAL,CAAD;AAAgC,CAA7D;AAAA,IAA8DC,CAAC,GAAC,CAACL,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOI,CAAP,KAAW;EAAC,IAAGL,CAAC,IAAE,OAAOA,CAAP,IAAU,QAAb,IAAuB,OAAOA,CAAP,IAAU,UAApC,EAA+C,KAAI,IAAIM,CAAR,IAAaf,CAAC,CAACS,CAAD,CAAd,EAAkB,CAACL,CAAC,CAACY,IAAF,CAAOR,CAAP,EAASO,CAAT,CAAD,IAAcA,CAAC,KAAGL,CAAlB,IAAqBd,CAAC,CAACY,CAAD,EAAGO,CAAH,EAAK;IAACJ,GAAG,EAAC,MAAIF,CAAC,CAACM,CAAD,CAAV;IAAcH,UAAU,EAAC,EAAEE,CAAC,GAAChB,CAAC,CAACW,CAAD,EAAGM,CAAH,CAAL,KAAaD,CAAC,CAACF;EAAxC,CAAL,CAAtB;EAAgF,OAAOJ,CAAP;AAAS,CAAtO;;AAAuO,IAAIS,CAAC,GAAC,CAACT,CAAD,EAAGC,CAAH,EAAKC,CAAL,MAAUA,CAAC,GAACF,CAAC,IAAE,IAAH,GAAQf,CAAC,CAACS,CAAC,CAACM,CAAD,CAAF,CAAT,GAAgB,EAAlB,EAAqBK,CAAC,CAACJ,CAAC,IAAE,CAACD,CAAJ,IAAO,CAACA,CAAC,CAACU,UAAV,GAAqBtB,CAAC,CAACc,CAAD,EAAG,SAAH,EAAa;EAACS,KAAK,EAACX,CAAP;EAASI,UAAU,EAAC,CAAC;AAArB,CAAb,CAAtB,GAA4DF,CAA7D,EAA+DF,CAA/D,CAAhC,CAAN;AAAA,IAAyGY,CAAC,GAACZ,CAAC,IAAEK,CAAC,CAACjB,CAAC,CAAC,EAAD,EAAI,YAAJ,EAAiB;EAACuB,KAAK,EAAC,CAAC;AAAR,CAAjB,CAAF,EAA+BX,CAA/B,CAA/G;;AAAiJ,IAAIa,CAAC,GAAC,EAAN;AAASd,CAAC,CAACc,CAAD,EAAG;EAACC,OAAO,EAAC,MAAIC;AAAb,CAAH,CAAD;AAAqBC,MAAM,CAACC,OAAP,GAAeL,CAAC,CAACC,CAAD,CAAhB;;AAAoB,IAAIK,CAAC,GAACT,CAAC,CAACU,OAAO,CAAC,mBAAD,CAAR,CAAP;AAAA,IAAsCC,CAAC,GAACX,CAAC,CAACU,OAAO,CAAC,QAAD,CAAR,CAAzC;AAAA,IAA6DE,CAAC,GAACZ,CAAC,CAACU,OAAO,CAAC,aAAD,CAAR,CAAhE;AAAA,IAAyFG,CAAC,GAACb,CAAC,CAACU,OAAO,CAAC,WAAD,CAAR,CAA5F;AAAA,IAAmHI,CAAC,GAACd,CAAC,CAACU,OAAO,CAAC,mBAAD,CAAR,CAAtH;AAAA,IAAqJK,CAAC,GAACf,CAAC,CAACU,OAAO,CAAC,YAAD,CAAR,CAAxJ;AAAA,IAAgLM,CAAC,GAAChB,CAAC,CAACU,OAAO,CAAC,qBAAD,CAAR,CAAnL;AAAA,IAAoNO,CAAC,GAACjB,CAAC,CAACU,OAAO,CAAC,SAAD,CAAR,CAAvN;AAAA,IAA4OQ,CAAC,GAAClB,CAAC,CAACU,OAAO,CAAC,UAAD,CAAR,CAA/O;AAAA,IAAqQS,CAAC,GAACnB,CAAC,CAACU,OAAO,CAAC,kBAAD,CAAR,CAAxQ;AAAA,IAAsSU,CAAC,GAACpB,CAAC,CAACU,OAAO,CAAC,iBAAD,CAAR,CAAzS;;AAAsU,MAAMW,CAAC,GAAC;EAACC,eAAe,EAACb,CAAC,CAACJ,OAAnB;EAA2BkB,IAAI,EAACZ,CAAC,CAACN,OAAlC;EAA0CmB,SAAS,EAACZ,CAAC,CAACP,OAAtD;EAA8DoB,OAAO,EAACZ,CAAC,CAACR,OAAxE;EAAgFqB,eAAe,EAACZ,CAAC,CAACT,OAAlG;EAA0GsB,QAAQ,EAACZ,CAAC,CAACV,OAArH;EAA6HuB,iBAAiB,EAACZ,CAAC,CAACX,OAAjJ;EAAyJwB,KAAK,EAACZ,CAAC,CAACZ,OAAjK;EAAyKyB,MAAM,EAACZ,CAAC,CAACb,OAAlL;EAA0L0B,cAAc,EAACZ,CAAC,CAACd,OAA3M;EAAmN2B,aAAa,EAACZ,CAAC,CAACf;AAAnO,CAAR;AAAoP,IAAIC,CAAC,GAACe,CAAN;AAAQ,MAAId,MAAM,CAACC,OAAP,GAAe,EAAnB"},"metadata":{},"sourceType":"script"}